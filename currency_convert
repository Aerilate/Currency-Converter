import argparse
import sys
import os.path

EURO_SIGN = 'â‚¬'

def parseCSV(content):
    lines = content.split('\n')
    parsed = [ line.split(',') for line in lines if line]
    return parsed

def CSVtoString(content):
    formatted = [ ','.join(line) for line in content ]
    formatted = '\n'.join(formatted)
    return formatted

def stripSymbol(price):
    # only keep numbers and '.' to remove currency symbols
    price = [ char for char in price if char.isnumeric() or char == '.' ]
    price = ''.join(price)
    return price

def convertCurrency(content, fieldNum, multiplier):
    for i in range(1, len(content)): # ignore header row
        price = float(stripSymbol(content[i][fieldNum]))
        price = price * multiplier
        content[i][fieldNum] = EURO_SIGN + ' %.2f' % price

def main():
    parser = argparse.ArgumentParser(description='Converts prices in a CSV to another currency.')
    parser.add_argument('--field', metavar='N', type=int, required=True,
                        help='Convert CSV field N')
    parser.add_argument('--multiplier', metavar='N', type=float,
                        help='Multiply currency value by N for the current conversion rate')
    parser.add_argument('-i', metavar='input', type=str,
                        help='Read from input file (or stdin)')
    parser.add_argument('-o', metavar='output', type=str,
                        help='Write to output file (or stdout)')

    args = parser.parse_args()
    inputFile = args.i
    outputFile = args.o
    fieldNum = args.field
    multiplier = args.multiplier

    # Basic checks
    if inputFile and not os.path.isfile(inputFile):
        print(f'ERROR: The input file {inputFile} does not exist.')
        return 1
    elif fieldNum < 1:
        print(f'ERROR: The field number {fieldNum} must be at least 1.')
        return 1
    elif not multiplier:
        print(f'ERROR: A multiplier must be specified.')
        return 1

    if inputFile:
        file = open(inputFile, "r")
        content = file.read()
    else:
        content = ''
        for line in sys.stdin:
            content += line
    parsed = parseCSV(content)

    convertCurrency(parsed, fieldNum - 1, multiplier) # subtract 1 because arrays are 0-based
    
    newContent = CSVtoString(parsed)
    if outputFile:
        f = open(outputFile, "w")
        f.write(newContent)
        f.close()
    else:
        print(newContent)


if __name__ == '__main__':
    main()
